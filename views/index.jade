extends layout

block content
  #app
    if !loginUser
      section.signin
        .dialog
          form.ui-component(action="/login" method="post")
            div.userid.ui-block
              label.ui-component(id="username") ユーザーネーム
              input.ui-component(type="text" name="username" for="username" placeholder="username")
            div.password.ui-block
              label.ui-component パスワード
              input.ui-component(type="password" name="password" placeholder="password")
            div.ui-block
              button.ui-component(type="submit") ログイン
      section.about
        .container
          .head-component
            h1 About
              span このサービスについて
          .read 
            |このサービスは、会員専用のためご利用にはログインが必要です。
            |また、現在開発中のため、動作や見た目が変わります。
    else
      section.date
        .holder
          .block.today
            .ui-component(v-on:click="changeDate(0)") 本日
          .block.present
            .holder
              .nav.prev(v-on:click="changeDate(-1)") 
                i.fas.fa-chevron-left.fa-lg
              .text
                span.num {{currentDate.year}}
                span.unit 年
                span.num {{currentDate.month}}
                span.unit 月
                span.num {{currentDate.day}}
                span.unit 日
                span.unit (
                span.dayofweek {{currentDate.dayOfWeekString}}
                span.unit )
              .nav.next(v-on:click="changeDate(1)") 
                i.fas.fa-chevron-right.fa-lg
          .block.select
            i.fas.fa-calendar-alt.fa-2x
      section.office
        .container
          .office-list
            office-component(v-for="office in offices",
               v-bind:key="office.officeId",
               v-bind:office="office",
               v-bind:spaces="officeSpaceObject[office.officeId]",
               v-bind:currentdate="currentDate",
               v-on:show-modal="showModal"
            )
      modal-component(v-bind:perioddata="periodData" v-bind:modal_visibility="modal_visibility" v-on:clear-modal="clearModal")

block script
  script.
    'use strict';

    var modalComponent = Vue.extend({
      props:['perioddata', 'modal_visibility'],
      methods: {
        clearModal: function() {
          this.$emit('clear-modal');
        }
      },
      template: `<transition>
                   <div class="overlay" v-show="modal_visibility" v-on:click.self="clearModal">
                     <div class="modal">
                       <div class="panel">
                         <div class="section cancel">
                           <div class="message">
                             <h1>予約内容</h1>
                             <div class="information">
                               <div class="office">
                                 <div class="head">施設名</div>
                                 <div class="body">{{perioddata.officename}}</div>
                               </div>
                               <div class="space">
                                 <div class="head">部屋</div>
                                 <div class="body">{{perioddata.spacename}}</div>
                               </div>
                               <div class="date">
                                 <div class="head">日時</div>
                                 <div class="body">{{perioddata.year}}年 {{perioddata.month}}月 {{perioddata.day}}日({{perioddata.dayofweek}}) {{perioddata.periodname}}</div>
                               </div>
                               <div class="name">
                                 <div class="head">お名前</div>
                                 <div class="body">{{perioddata.guestname}}</div>
                               </div>
                             </div>
                           </div>
                           <div class="nav-holder">
                             <div class="btn-holder">
                               <div class="btn-close ui-component" v-on:click="clearModal">閉じる</div>
                             </div>
                             <div class="btn-holder">
                               <a class="ui-component confirm" v-bind:href="'/reserve/cancel/' + perioddata.reservationId">予約をキャンセルする</a>
                             </div>
                           </div>
                         </div>
                       </div>
                       <div class="close" v-on:click="clearModal"></div>
                     </div>
                   </div>
                 </transition>`,
    });

    var spaceComponent = Vue.extend({
      props:['space', 'currentdate'],
      methods: {
        showModal: function(period) {
          this.$emit('show-modal', period)
        }
      },
      template: `<li class="space clearfix">
                        <div class="information clearfix">
                          <div class="name">{{space.spacename}}</div>
                          <div class="capacity">
                            最大<span>{{space.capacity}}</span>名
                          </div>
                        </div>
                        <div class="reservation">
                          <div class="period" v-for="period in space.periods" v-bind:key="period.num">
                            <div class="time">{{period.periodname}}</div>
                            <a v-if="period.availability"
                               class="status available"
                               key="reserve-available"
                               v-bind:href="'/reserve/space/' + space.spaceId + '/period/' + period.num + '/year/' + currentdate.year + '/month/' + currentdate.month + '/day/' + currentdate.day"
                            >
                               &#9675;
                            </a>
                            <div v-else-if="period.isSelf"
                              class="status unavailable nav-detail"
                              key="reserve-is-self"
                              v-on:click="showModal(period)"
                            >
                              予約済
                            </div>
                            <div v-else
                              class="status unavailable"
                              key="reserve-not-available"
                            >
                              &#10005;
                            </div>
                          </div>
                        </div>
                      </li>`,
    });

    var officeComponent = Vue.extend({
      props:['office', 'spaces', 'currentdate'],
      data: function() {
        return {
          showImg: false
        }
      },
      components: {
        'space-component': spaceComponent
      },
      methods: {
        showModal: function(period) {
          this.$emit('show-modal', period)
        }
      },
      template: `<div class="box">
                  <div class="information">
                    <div class="photo"><img v-bind:src="office.imgPath" v-on:load="showImg=true" v-bind:class="{hide: !showImg}" class="responsive-img"></div>
                    <div class="name">{{office.officename}}</div>
                  </div>
                  <div class="data">
                    <ul class="space-list">
                      <space-component v-for="space in spaces" v-bind:key="space.spaceId" v-bind:space="space" v-bind:currentdate="currentdate" v-on:show-modal="showModal"></space-component>
                    </ul>
                  </div>
                </div>`,
    });

    var app = new Vue({
      el: '#app',
      components: {
        'office-component': officeComponent,
        'modal-component': modalComponent
      },
      data: {
        currentDate: {},
        offices: [],
        officeSpaceObject: {},
        periodData: {},
        modal_visibility: false
      },
      mounted() {
        fetch('/dateOfCurrentDay')
          .then(response => response.json())
          .then((data) => {
            this.currentDate = data.currentDate;
            this.offices = data.offices;
            this.officeSpaceObject = data.officeSpaceObject;
          })
      },
      methods: {
        showModal: function(period) {
          this.modal_visibility = true;
          this.periodData = period
        },
        clearModal: function() {
          this.modal_visibility = false;
        },
        changeDate: function(direction) {
          var url = '/dateOfCurrentDay';
          if (direction !== 0) {
            var day = Number(this.currentDate.day) + direction;
            var parameter = '?year=' + this.currentDate.year + '&month=' + this.currentDate.month + '&day=' + day;
            url += parameter;
          }
          fetch(url)
            .then(response => response.json())
            .then((data) => {
              this.currentDate = data.currentDate;
              this.offices = data.offices;
              this.officeSpaceObject = data.officeSpaceObject;
            })
        }
      }
    })
